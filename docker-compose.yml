version: '3.5'

services:
  backend:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        uid: ${UID:-1000}
    container_name: ${APP_NAME:-backend}_app
    restart: unless-stopped
    ports:
      - '${APP_PORT:-8000}:80'
    environment:
      - APACHE_RUN_USER=#1000
      - APACHE_RUN_GROUP=#1000
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./docker/apache/laravel.conf:/etc/apache2/sites-available/laravel.conf
    networks:
      - backend-network
  mysql:
    image: mysql:8.0
    container_name: ${APP_NAME:-backend}_mysql
    restart: unless-stopped
    tty: true
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max_connections=2213
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      retries: 3
      timeout: 5s
    networks:
      - backend-network
  redis:
    image: redis:7.2
    container_name: ${APP_NAME:-backend}_redis
    command:
        - /bin/sh
        - -c
        - redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
        - ./docker/redis/data:/var/lib/redis/data
        - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
        - '${FORWARD_REDIS_PORT:-6379}:6379'
  phpmyadmin:
    container_name: ${APP_NAME:-backend}_phpmyadmin
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOSTS=${APP_NAME:-croix}_mysql
      - PMA_USER=${DB_USERNAME}
      - PMA_PASSWORD=${DB_PASSWORD}
    ports:
      - ${PHPMYADMIN_PORT_EXTRA:-8088}:80
    networks:
      - backend-network
  mailcatcher:
    container_name: ${APP_NAME:-backend}_mailcatcher
    image: schickling/mailcatcher
    ports:
      - ${MAILCATCHER_PORT_EXTRA:-1088}:1080
      - 1025:1025
    networks:
        - backend-network
networks:
  backend-network:
    driver: bridge
